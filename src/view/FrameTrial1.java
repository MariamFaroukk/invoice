/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controller;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTable;
import model.InvoiceHeader;
import model.TableForInvoices;
import model.TableForLines;

/**
 *
 * @author DELL
 */
public class FrameTrial1 extends javax.swing.JFrame {

    public Controller controller;

    /**
     * Creates new form FrameTrial1
     * public AppFrame () {
    controller = newjController (this );
    initComponents():
    *   controller = new Controller (this);
     */
     
    public FrameTrial1() {
          controller = new Controller (this);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        InvoceHeaderTable = new javax.swing.JTable();
        AddInvoiceBtn = new javax.swing.JButton();
        DeleteInvoiceBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        InvoceItemsTable = new javax.swing.JTable();
        AddItemBtn = new javax.swing.JButton();
        DeleteItemBtn = new javax.swing.JButton();
        invoiceNumbLabel = new javax.swing.JLabel();
        InvoiceDateLabel = new javax.swing.JLabel();
        ClientNameLabel = new javax.swing.JLabel();
        TotalLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        LoadFilesOp = new javax.swing.JMenuItem();
        SaveFilesOp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InvoceHeaderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(InvoceHeaderTable);

        AddInvoiceBtn.setText("Add Invoice");

        DeleteInvoiceBtn.setText("Delete Invoice");

        jLabel1.setText("Invoice #");

        jLabel2.setText("Date");

        jLabel3.setText("Client Name");

        jLabel4.setText("Total");

        InvoceItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(InvoceItemsTable);

        AddItemBtn.setText("Add Item");

        DeleteItemBtn.setText("Delete Item");

        invoiceNumbLabel.setText(":");

        InvoiceDateLabel.setText(":");

        ClientNameLabel.setText(":");

        TotalLabel.setText(":");

        jMenu1.setText("Main Menu");

        LoadFilesOp.setText("Load Files");
        jMenu1.add(LoadFilesOp);

        SaveFilesOp.setText("Save Files");
        jMenu1.add(SaveFilesOp);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TotalLabel)
                            .addComponent(invoiceNumbLabel)
                            .addComponent(InvoiceDateLabel)
                            .addComponent(ClientNameLabel))))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(AddInvoiceBtn)
                .addGap(188, 188, 188)
                .addComponent(DeleteInvoiceBtn)
                .addGap(174, 174, 174)
                .addComponent(AddItemBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DeleteItemBtn)
                .addGap(163, 163, 163))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddInvoiceBtn)
                    .addComponent(DeleteInvoiceBtn))
                .addGap(59, 59, 59))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(invoiceNumbLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InvoiceDateLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ClientNameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TotalLabel)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddItemBtn)
                    .addComponent(DeleteItemBtn))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameTrial1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameTrial1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameTrial1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameTrial1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              FrameTrial1 frame=  new FrameTrial1();
              frame.controller.loadFiles("InvoiceHeader.csv","InvoiceLine.csv");
              frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddInvoiceBtn;
    private javax.swing.JButton AddItemBtn;
    private javax.swing.JLabel ClientNameLabel;
    private javax.swing.JButton DeleteInvoiceBtn;
    private javax.swing.JButton DeleteItemBtn;
    private javax.swing.JTable InvoceHeaderTable;
    private javax.swing.JTable InvoceItemsTable;
    private javax.swing.JLabel InvoiceDateLabel;
    private javax.swing.JMenuItem LoadFilesOp;
    private javax.swing.JMenuItem SaveFilesOp;
    private javax.swing.JLabel TotalLabel;
    private javax.swing.JLabel invoiceNumbLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
public static SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
private ArrayList<InvoiceHeader> invoices;


 private TableForInvoices headerTableModel;
    private TableForLines lineTableModel;
     public JLabel getCustNameLbl() {
        return ClientNameLabel;
    }

    public JLabel getInvDateLbl() {
        return InvoiceDateLabel;
    }

    public JLabel getInvNumLbl() {
        return invoiceNumbLabel;
    }

    public JLabel getInvTotalLbl() {
        return TotalLabel;
    }

    public JTable getInvoicesTable() {
        return InvoceHeaderTable;
    }

    public JTable getItemsTable() {
        return InvoceItemsTable;
    }

    public TableForInvoices getHeaderTableModel() {
        return headerTableModel;
    }

    public void setHeaderTableModel(TableForInvoices headerTableModel) {
        this.headerTableModel = headerTableModel;
        getInvoicesTable().setModel(headerTableModel);
    }

    public TableForLines getLineTableModel() {
        return lineTableModel;
    }

    public void setLineTableModel(TableForLines lineTableModel) {
        this.lineTableModel = lineTableModel;
        getItemsTable().setModel(lineTableModel);
    }
    public ArrayList<InvoiceHeader> getInvoices() {
        if (invoices == null) {
            invoices = new ArrayList<>();
        }
        return invoices;
    }
    
    public InvoiceHeader getInvoiceByNum(int num) {
        for (InvoiceHeader inv : getInvoices()) {
            if (inv.getInvoiceNumb() == num) return inv;
        }
        return null;
    }











}

